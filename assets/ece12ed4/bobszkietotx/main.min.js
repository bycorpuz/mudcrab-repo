$('body').on('blur', '.email', function(){
    if($(this).val()!==''){
        var emailVal = $(this).val();
        $.post('/mudcrab/users/checknewemail',{'email':emailVal},function(data){
            if(data > 0){
                swal("Not Allowed", "Email is Already Taken!", "error");
                document.getElementById("email").value = '';
                document.getElementById("email").focus();
            }
        });
    } else {
        $(this).focus();
    }
});

$('body').on('blur', '.user-name', function(){
    if($(this).val()!==''){
        var usernameVal = $(this).val();
        $.post('/mudcrab/users/checkuser',{'username':usernameVal},function(data){
            if(data > 0){
                swal("Not Allowed", "Username is Already Taken!", "error");
                document.getElementById("username").value = '';
                document.getElementById("username").focus();
            }
        });
    } else {
        $(this).focus();
    }
});

$('body').on('click', '.validatePassword', function(){
    var $this = $(this); // this is just for performance
    if($this.hasClass('fa fa-circle-o')){
        $('.fa fa-dot-circle-o').toggleClass("fa fa-dot-circle-o").toggleClass("fa fa-circle-o");
        $this.toggleClass("fa fa-circle-o").toggleClass("fa fa-dot-circle-o");
        $('#users-validation-password').attr('type', 'text'); 
    } else {
        $('.fa fa-circle-o').toggleClass("fa fa-circle-o").toggleClass("fa fa-dot-circle-o");
        $this.toggleClass("fa fa-dot-circle-o").toggleClass("fa fa-circle-o");
        $('#users-validation-password').attr('type', 'password'); 
    }
});

$('body').on('click', '.newPassword', function(){
    var $this = $(this); // this is just for performance
    if($this.hasClass('fa fa-unlock-alt')){
        $('.fa fa-lock').toggleClass("fa fa-lock").toggleClass("fa fa-unlock-alt");
        $this.toggleClass("fa fa-unlock-alt").toggleClass("fa fa-lock");
        $('#users-new-password').attr('type', 'text'); 
    } else {
        $('.fa fa-unlock-alt').toggleClass("fa fa-unlock-alt").toggleClass("fa fa-lock");
        $this.toggleClass("fa fa-lock").toggleClass("fa fa-unlock-alt");
        $('#users-new-password').attr('type', 'password'); 
    }
});

$('body').on('click', '.showPassword', function(){
    var $this = $(this); // this is just for performance
    if($this.hasClass('glyphicon-eye-open')){
        $('.glyphicon-eye-close').toggleClass("glyphicon-eye-close").toggleClass("glyphicon-eye-open");
        $this.toggleClass("glyphicon-eye-open").toggleClass("glyphicon-eye-close");
        $('#users-current-password').attr('type', 'text'); 
    } else {
        $('.glyphicon-eye-open').toggleClass("glyphicon-eye-open").toggleClass("glyphicon-eye-close");
        $this.toggleClass("glyphicon-eye-close").toggleClass("glyphicon-eye-open");
        $('#users-current-password').attr('type', 'password'); 
    }
});

function comparePass(){
    if($('#users-new-password').val() !== $('#users-validation-password').val()){
        swal("Not Allowed", "Password did not match!", "error");
        document.getElementById("users-validation-password").value = '';
    }
};

$('body').on('blur', '.users-validation-password', function(){
    comparePass();
})

$('body').on('keyup', '.users-new-password', function(){
    if($(this).val().length >= 6){
        $('.users-validation-password').prop('disabled', false);
        document.getElementById("users-validation-password").value = '';
    } else {
        $('.users-validation-password').prop('disabled', true);
    }
});

$('body').on('blur', '.users-current-password', function(){
    if($(this).val()!==''){
        var id=$('.178163236').val();
        var curPassVal = $(this).val();
        $.post('/mudcrab/users/checkpassword',{'current_password':curPassVal,'id':id},function(data){
            if(data == 0){
                swal("Not Allowed", "Current password is incorrect!", "error");
                document.getElementById("users-current-password").value = '';
                document.getElementById("users-current-password").focus();
            }
        });
    } else {
        $(this).focus();
    }
});

$('body').on('blur', '.users-username', function(){
    if($(this).val()!==''){
        var id=$('.178163236').val();
        var usernameVal = $(this).val();
        $.post('/mudcrab/users/checkusername',{'username':usernameVal,'id':id},function(data){
            if(data > 0){
                swal("Not Allowed", "Username is Already Taken!", "error");
                document.getElementById("users-username").value = '';
                document.getElementById("users-username").focus();
            }
        });
    } else {
        $(this).focus();
    }
});

$('body').on('blur', '.users-email', function(){
    if($(this).val()!==''){
        var id=$('.178163236').val();
        var emailVal = $(this).val();
        $.post('/mudcrab/users/checkemail',{'email':emailVal,'id':id},function(data){
            if(data > 0){
                swal("Not Allowed", "Email is Already Taken!", "error");
                document.getElementById("users-email").value = '';
                document.getElementById("users-email").focus();
            }
        });
    } else {
        $(this).focus();
    }
});

$('body').on('click', '.deleteSelectedactivationbutton', function(){

    var deleteSelected = $('#usersinformation').yiiGridView('getSelectedRows');
    if (deleteSelected == ''){
        swal("Error", "No selected record!", "error");
    }
    else {
        swal({
          title: "Are you sure?",
          text: "The selected user account will be activated/deactivated!",
          type: "warning",
          showCancelButton: true,
          confirmButtonColor: "#DD6B55",
          confirmButtonText: "Yes, I agree!",
          closeOnConfirm: false
        },
        function(){
            $.ajax({
                type: 'POST',
                url : 'deletemultiple',
                data : {row_id: deleteSelected},
                success : function() {
                    $.pjax.reload({container:'#kv-unique-id-1'});
                    swal("Success!", "Your request has been granted.", "success");
                },
                error: function () {
                    swal("Error", "Activation request failed!", "error");
                }
            });
        });
    }

});

$('body').on('click', '.changeSelectedPasswordbutton', function(){

    var deleteSelected = $('#usersinformation').yiiGridView('getSelectedRows');
    if (deleteSelected == ''){
        swal("Error", "No selected record!", "error");
    }
    else {
        swal({
          title: "Are you sure?",
          text: "The password of the selected user account will be change!",
          type: "warning",
          showCancelButton: true,
          confirmButtonColor: "#DD6B55",
          confirmButtonText: "Yes, I agree!",
          closeOnConfirm: false
        },
        function(){
            $.ajax({
                type: 'POST',
                url : 'changemultiplepassword',
                data : {row_id: deleteSelected},
                success : function() {
                    $.pjax.reload({container:'#kv-unique-id-1'});
                    swal("Success!", "Password has been changed.", "success");
                },
                error: function () {
                    swal("Error", "Password not changed!", "error");
                }
            });
        });
    }

});

function changeStatusActive(user_id,status){
    event.preventDefault();
    swal({
        title: "Are you sure?",
        text: "User account will be deactivated!",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, I agree!",
        closeOnConfirm: false
    },
    function(){
        $.ajax({
            url: 'activation',
            dataType: 'json',
            type: 'post',
            data: {user_id:user_id, status:status},
            success: function(data) {
                $.pjax.reload({container:'#kv-unique-id-1'});
                if (status == 0){
                    swal("Success!", "Account selected succesfully activated!", "success");
                } else {
                    swal("Success!", "Account selected succesfully deactivated!", "success");
                }
                
            },
            error: function () {
                swal("Error", "Activation request failed!", "error");
            }
        });
    });
};

function changeStatusInactive(user_id,status){
    event.preventDefault();
    swal({
        title: "Are you sure?",
        text: "User account will be activated!",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, I agree!",
        closeOnConfirm: false
    },
    function(){
        $.ajax({
            url: 'activation',
            dataType: 'json',
            type: 'post',
            data: {user_id:user_id, status:status},
            success: function(data) {
                $.pjax.reload({container:'#kv-unique-id-1'});
                if (status == 0){
                    swal("Success!", "Account selected succesfully activated!", "success");
                } else {
                    swal("Success!", "Account selected succesfully deactivated!", "success");
                }
                
            },
            error: function () {
                swal("Error", "Activation request failed!", "error");
            }
        });
    });
};

function changePassword(user_id){
    event.preventDefault();
    swal({
        title: "Are you sure?",
        text: "Password will be change to default password!",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, I agree!",
        closeOnConfirm: false
    },
    function(){
        $.ajax({
            url: 'changepassword',
            dataType: 'json',
            type: 'post',
            data: {user_id:user_id},
            success: function(data) {
                $.pjax.reload({container:'#kv-unique-id-1'});

                swal("Success!", "Password successfully changed!", "success");            
            },
            error: function () {
                swal("Error", "Failed to change the password!", "error");
            }
        });
    });
};

$('body').on('click', '.deleteSelectedUseraccessbutton', function(){
    var deleteSelected = $('#useraccess').yiiGridView('getSelectedRows');
    if (deleteSelected == ''){
        swal("Error", "No selected record!", "error");
    }
    else {
        swal({
          title: "Are you sure?",
          text: "The selected user access will be deleted.",
          type: "warning",
          showCancelButton: true,
          confirmButtonColor: "#DD6B55",
          confirmButtonText: "Yes, I agree!",
          closeOnConfirm: false
        },
        function(){
            $.ajax({
                type: 'POST',
                url : 'deletemultiple',
                data : {row_id: deleteSelected},
                success : function() {
                    $.pjax.reload({container:'#kv-unique-id-1'});
                    swal("Success!", "Selected User Access Successfully Deleted.", "success");
                },
                error: function () {
                    swal("Error", "Selected User Access Not Deleted.", "error");
                }
            });
        });
    }
});

$("#frm_useraccess").on("submit", function(event) {
    event.preventDefault();

    $.ajax({
        url: 'saveuseraccess',
        dataType: 'json',
        type: 'post',
        data: $(this).serialize(),
        success: function(data) {
            $("#frm_useraccess")[0].reset();
            $.pjax.reload({container:'#kv-unique-id-1'});
            notifySuccess();
        },
        error: function () {
            notifyError();
        }
    });
});

function notifySuccessDelete(){
    $.notify({
        // options
        icon: 'glyphicon glyphicon-ok-sign',
        title: 'Well done!',
        message: 'Data Successfully Deleted.',
        //url: 'https://github.com/mouse0270/bootstrap-notify',
        //target: '_blank'
    },{
        // settings
        element: 'body',
        position: null,
        type: "success",
        allow_dismiss: true,
        newest_on_top: false,
        showProgressbar: false,
        placement: {
            from: "top",
            align: "right"
        },
        offset: 20,
        spacing: 10,
        z_index: 1031,
        delay: 1000,
        timer: 1000,
        url_target: '_blank',
        mouse_over: null,
        animate: {
            enter: 'animated fadeInDown',
            exit: 'animated fadeOutUp'
        },
    });
};

function notifySuccess(){
    $.notify({
        // options
        icon: 'glyphicon glyphicon-ok-sign',
        title: 'Well done!',
        message: 'Data Successfully Saved.',
        //url: 'https://github.com/mouse0270/bootstrap-notify',
        //target: '_blank'
    },{
        // settings
        element: 'body',
        position: null,
        type: "success",
        allow_dismiss: true,
        newest_on_top: false,
        showProgressbar: false,
        placement: {
            from: "top",
            align: "right"
        },
        offset: 20,
        spacing: 10,
        z_index: 1031,
        delay: 1000,
        timer: 1000,
        url_target: '_blank',
        mouse_over: null,
        animate: {
            enter: 'animated fadeInDown',
            exit: 'animated fadeOutUp'
        },
    });
};

function notifyError(){
    $.notify({
        // options
        icon: 'glyphicon glyphicon-remove-sign',
        title: 'Data Not Saved!',
        message: 'Please try again.',
        //url: 'https://github.com/mouse0270/bootstrap-notify',
        //target: '_blank'
    },{
        // settings
        element: 'body',
        position: null,
        type: "danger",
        allow_dismiss: true,
        newest_on_top: false,
        showProgressbar: false,
        placement: {
            from: "top",
            align: "right"
        },
        offset: 20,
        spacing: 10,
        z_index: 1031,
        delay: 1000,
        timer: 1000,
        url_target: '_blank',
        mouse_over: null,
        animate: {
            enter: 'animated fadeInDown',
            exit: 'animated fadeOutUp'
        },
    });
};


$('body').on('click', '.modalButtoncreate', function(){
    $('#modalcreate').modal('show').find('#modalContent').load($(this).attr('value'));    
});

$('body').on('click', '.modalButtonview', function(){
    $('#modalview').modal('show').find('#modalContent').load($(this).attr('value'));    
});

$('body').on('click', '.modalButtonedit', function(){
    $('#modaledit').modal('show').find('#modalContent').load($(this).attr('value'));    
});

$('body').on('click', '.modalButtoneditprofile', function(){
    $('#modalupdateprofile').modal('show').find('#modalContent').load($(this).attr('value'));    
});

jQuery(document).ready(function() {
    jQuery('abbr.timeago').timeago();
});